#-*- mode: org -*-
#+title: What's new in Emacs 30?

<2023-08-04 Fri>

https://youtu.be/Bm_jA0m17ko

* X selection requests are now handled much faster and asynchronously

I.e. copying text to and from Emacs is faster and less likely to freeze the program even when large portions of text are being copied.

This means it should be less necessary to disable the likes of 'select-active-regions' when Emacs is running over a slow network connection. The variable `select-active-regions' allows one to automatically copy between Emacs and other applications.

* 'write-region-inhibit-fsync' now defaults to t in interactive mode, as it has in batch mode since Emacs 24.

This controls whether or not file data is synchronized to the disk immediately when writing a region to a file. It improves the speed of saving large files. Downside: Could result in data loss.

* New user options for remote files:

e.g. 'remote-file-name-inhibit-delete-by-moving-to-trash'.

With this new option, Emacs allows users to decide whether remote files should be moved to the local trash or deleted outright

* New user option 'yes-or-no-prompt'.

This allows the user to customize the 'yes-or-no' prompt.

* New face 'display-time-date-and-time'.

This is used for displaying the time and date components of 'display-time-mode', a minor mode in Emacs that, when enabled, displays the current time (and optionally the date) in the mode line.

#+begin_src emacs-lisp
  (display-time-mode 1)

(custom-set-faces
 '(display-time-date-and-time ((t (:foreground "white")))))
#+end_src

* New icon images for general use

Several symbolic icons are added to "etc/images/symbols", including
plus, minus, check-mark, start, etc.

[[c:/emacs/emacs/etc/images/symbols]]

* Tool bars can now be placed at the bottom of the screen on more systems

M-x tool-bar-mode
(set-frame-parameter nil 'tool-bar-position 'bottom)

* Improvements to cl-print

Useful with data, debugging, or developing.

You can expand the "..." symbol truncation everywhere.

The code that allowed "..." to be expanded in the "*Backtrace*" buffer
should now work anywhere the data is generated by 'cl-print'.

* Modeline elements can now be right-aligned.

Anything following the symbol 'mode-line-format-right-align' in
'mode-line-format' will be right-aligned.

* On X, Emacs now supports input methods which perform "string conversion".

The primary benefit of this improvement is a smoother and more intuitive typing experience for users who need to use complex input methods, such as those required for many Asian languages

* New command 'kill-matching-buffers-no-ask'.

A convenient function that allows you to kill buffers matching a pattern without providing confirmation.

* New user option 'grep-use-headings'

Provides a way to change the display format of Grep results, with the output from Grep organized into sections, with each file having its own section, rather than prefixing each line with the filename.

* 'eshell-read-aliases-list' is now an interactive command.

Once the aliases have been reloaded, any new or changed alias definitions will be available immediately in Eshell sessions

* In eshell 'rgrep' is now a builtin command.

Running 'rgrep' in Eshell now uses the Emacs grep facility instead of calling external grep obviating the need to install grep. This only works in eshell not in shell or ansi-term.

* New command 'prog-fill-reindent-defun'.

This command either fills a single paragraph in a defun, such as a
docstring, or a comment, or (re)indents the surrounding defun if point
is not in a comment or a string. It is by default bound to 'M-q' in
'prog-mode' and all its descendants.

[[c:/Files/e/Elements/prog-fill-reindent-defun.py]]

* New customisation options for 'dictionary-search'

* The Modus themes collection now includes eight items

The 'modus-operandi' and 'modus-vivendi' are the main themes that have
been part of Emacs since version 28.  The former is light, the latter
dark.  In addition to these, we now have 'modus-operandi-tinted' and
'modus-vivendi-tinted' for easier legibility, as well as
'modus-operandi-deuteranopia', 'modus-vivendi-deuteranopia',
'modus-operandi-tritanopia', and 'modus-vivendi-tritanopia' to cover
the needs of users with red-green or blue-yellow color deficiency.

* New or changed byte-compilation warnings

Several new warnings have been introduced.

https://github.com/emacs-mirror/emacs/blob/master/etc/NEWS

#+begin_src emacs-lisp
(setq native-comp-async-report-warnings-errors nil)
#+end_src
